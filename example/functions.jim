(def reduce (fn (combine initial values)
	(if (> (len values) 0)
		(*recur*
			combine
			(combine initial (get values 0))
			(rest values))
		initial)))


(def map (fn (f lst)
	(reduce
		(fn (acc n) (conj acc (list (f n))))
		(list) lst)))


(def partial (fn (f (xs))
	(fn ((ys)) (apply f (conj xs ys)))))
