(assign quicksort (func (A p r)
	(cond
		((< p r)
			(assign q (partition A p r))
			(quicksort A p (- q 1))
			(quicksort A (+ q 1) r)))))

(assign partition (func (A p r)
	(assign x (list-get A r))
	(assign i (- p 1))
	(assign j p)
	(while (<= j (- r 1))
		(cond
			((<= (list-get A j) x)
				(assign i (+ i 1))
				(list-exchange A i j)))
		(assign j (+ j 1)))
	(list-exchange A (+ i 1) r)
	(+ i 1)))

(assign list-exchange (func (A i j)
	(assign tmp (list-get A i))
	(list-set A i (list-get A j))
	(list-set A j tmp)))


(assign l (list 9 8 3 4 7 0 2 1 6 5))
(print "UNSORTED")
(print l)
(quicksort l 0 (- (len l) 1))
(print "SORTED")
(print l)
